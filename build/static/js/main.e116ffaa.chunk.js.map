{"version":3,"sources":["context/userContext.js","pages/home.jsx","ServerPath.jsx","product.jsx","pages/items.jsx","pages/signin.jsx","pages/register.jsx","pages/auth.jsx","pages/testArea.jsx","context/adminContext.js","pages/administrator/auth.jsx","pages/administrator/signin.jsx","pages/administrator/home.jsx","App.js","serviceWorker.js","index.js"],"names":["UserContext","createContext","UserContextProvider","props","useState","name","email","user","setUser","Provider","value","updateUser","field","prev","children","Home","useContext","href","hostPath","BuildHostPath","host","window","location","hostname","protocol","Product","Items","products","setProducts","price","newProduct","setNewProduct","getProducts","fetch","then","response","json","data","prevValue","enterProducts","console","log","catch","err","error","handleChange","event","target","useEffect","ServerPath","className","map","product","key","id","onChange","onClick","SignIn","history","useHistory","message","setmessage","type","preventDefault","document","getElementById","password","axios","get","res","push","info","to","Register","setMessage","registed","setRegister","title","Container","Jumbotron","Button","variant","Form","action","method","Control","size","placeholder","required","url","userError","Auth","Axios","withCredentials","auth","displayName","TestArea","feild","AdminContext","AdminContextProvider","granted","prevVal","access","App","path","exact","component","Products","AdminAuth","AdminSignIn","AdminHome","Boolean","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e116ffaa.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react';\n\nexport const UserContext = createContext();\n\nfunction UserContextProvider(props) {\n    \n    const [user, setUser] = useState({\n        name: '',\n        email: ''\n    });\n\n    function updateUser(field, value) {\n        setUser((prev) => {\n            return {...prev, [field]: value}\n        })\n    }\n    \n    return (\n        <UserContext.Provider value={{user, updateUser}}>\n            {props.children}\n        </UserContext.Provider>\n    );\n}\n\nexport default UserContextProvider;","import React, { useContext } from 'react';\nimport { UserContext } from '../context/userContext';\n\nfunction Home() {\n\n    const {user} = useContext(UserContext)\n\n    return(\n        <div>\n        <h1>React - Welcome to Test STAFF!</h1>\n        <h2>{user.name}</h2>\n        <a href=\"http://localhost:8080/logout\">Sign Out</a>\n        </div>\n    );\n}\n\nexport default Home;","import React from \"react\";\n\nlet hostPath = \"\";\n\nfunction BuildHostPath() {\n    \n    const host = window.location.hostname;\n    const protocol = window.location.protocol;\n\n    if(host === \"localhost\") {\n        hostPath = protocol + \"//\" + host + \":8080\";\n    } else {\n        hostPath = protocol +\"//\" + host;\n    }  \n}\n\nexport default BuildHostPath;\nexport { hostPath };","import React from 'react';\n\nfunction Product(props) {\n    return (\n        <p>{props.name}</p>\n    )\n}\n\nexport default Product;","import React, { useState, useEffect } from 'react';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport Product from \"../product\";\nimport '../App.css';\n\nfunction Items() {\n\n  const[products, setProducts] = useState([]);\n  const[newProduct, setNewProduct] = useState({\n    name: \"\",\n    price: 0\n  });\n\n  useEffect(() => {\n    ServerPath();\n    getProducts();\n  },[]);\n\n  function enterProducts(data) {\n    setProducts((prevValue) => {\n      return data;\n    })\n  }\n\n  function getProducts() {\n    fetch(hostPath + \"/products\")\n    .then(response => response.json())\n    .then(({ data }) => {\n      enterProducts(data);\n      console.log(data);\n    })\n    .catch(err => console.error(err));\n  }\n\n  function handleChange(event) {\n\n    const {name, value} = event.target;\n\n    setNewProduct((prevValue) => {\n      return {...prevValue, [name]:value}\n    });\n  }\n\n  function addProduct() {\n    const {name, price } = newProduct;\n\n    const url = hostPath + \"/products/add?name=\" + name + \"&price=\" + price;\n\n    fetch(url)\n    .then(getProducts)\n    .then(setNewProduct({name: \"\", price: 0}))\n    .catch(err => console.error(err));\n  }\n\n  return(\n    <div className=\"App\">\n        {/* {console.log(hostPath)} */}\n      <h1>Products</h1>\n      {products.map((product) => {\n        return (\n          <Product key={product.id} name={product.name} />\n        )\n      })}\n      <div>\n        <input name=\"name\" value={newProduct.name} onChange={handleChange}/>\n        <input name=\"price\" value={newProduct.price} onChange={handleChange}/>\n        <button onClick={addProduct}>Add</button>\n      </div>\n    </div>\n  )\n}\n\nexport default Items;","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ServerPath from \"../ServerPath\";\nimport { useHistory, Link } from 'react-router-dom';\n\nfunction SignIn() {\n\n    const history = useHistory();\n    const [message, setmessage] = useState('');\n\n    useEffect(() => {\n        ServerPath();\n    },[]);\n\n    function handleClick(event) {\n        event.preventDefault();\n        const email = document.getElementById(\"txtEmail\").value;\n        const password = document.getElementById(\"txtPassword\").value;\n\n        axios.get(\"/login?email=\" + email + \"&password=\" + password)\n        .then(res => {\n            const message = res.data.message;\n            if(message === \"Logged in successful\") {\n                history.push('/');\n            } else {\n                setmessage(res.data.info);\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        <h1>Sign In</h1> <br /> <br />\n        <form>\n            <label id=\"lblEmail\">Email:</label>\n            <input id=\"txtEmail\" name=\"email\" type=\"text\"></input><br />\n            <label id=\"lblPassword\">Password</label>\n            <input id=\"txtPassword\" name=\"password\" type=\"password\"></input>\n            <button onClick={handleClick}>LogIn</button>\n            <p>{message}</p>\n        </form>\n        <a href=\"http://localhost:8080/auth/google\">Sign In With Google</a>\n        <Link to=\"/register\">\n          <p><a>Register</a></p>\n        </Link>\n        </div>\n    )\n}\n\nexport default SignIn;","import React, {useEffect, useState} from 'react';\nimport axios from \"axios\";\nimport { useHistory } from 'react-router-dom';\n\n//Styles\nimport Button  from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Form from \"react-bootstrap/Form\";\n\n\nfunction Register() {\n\n    const history = useHistory();\n\n    const [message, setMessage] = useState('');\n    const [registed, setRegister] = useState(false)\n\n\n    useEffect(() => {\n        document.title = \"Register\"\n    },[]); \n\n    function handleClick(event) {\n        event.preventDefault();\n        setMessage('');\n        const name = document.getElementById(\"name\").value;\n        const email = document.getElementById(\"email\").value;\n        const password = document.getElementById(\"password\").value;\n        const confirmpassword = document.getElementById(\"confirmpassword\").value;\n        const url = \"/register/\"+ name +\"/\"+ email +\"/\"+ password +\"/\"+ confirmpassword;\n        \n        axios.get(url)\n        .then(res => {\n            if(res.data.message === \"User registered successfully\") {\n                setRegister(true);\n            } else {\n                if(res.data.userError === \"Yes\") {\n                    setMessage(res.data.message);\n                }\n        }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    function handleLogin() {\n        setRegister(false);\n        history.push('/signin')\n    }\n\n    \n    return (\n        <div className=\"body\">\n        <Container className=\"p-3\">\n            <Jumbotron className=\"back-color\">\n            <div className=\"header\">\n                <h1>Register</h1>\n                {registed ? (\n                    <div>\n                    <h2> You have successfully been registered</h2><br />\n                    <p>Please log in</p>\n                    <Button type=\"submit\" onClick={handleLogin} variant=\"primary\">Login</Button>\n                    </div>\n                ) : (\n                    <Form action=\"/form\" method=\"POST\">\n                    <Form.Control id=\"name\" size=\"sm\" type=\"text\" placeholder=\"Name\" required/>\n                    <br />\n                    <Form.Control id=\"email\" size=\"sm\" type=\"email\" placeholder=\"Email\" required/>\n                    <br />\n                    <Form.Control id=\"password\" size=\"sm\" type=\"password\" placeholder=\"Password\" required/>\n                    <br />\n                    <Form.Control id=\"confirmpassword\" size=\"sm\" type=\"password\" placeholder=\"Confirm Password\" required />\n                    <br />\n                    <p>{message}</p>\n                    <Button type=\"submit\" onClick={handleClick} variant=\"primary\">Register</Button>\n                </Form> \n                )}\n            </div>\n            </Jumbotron>\n        </Container>\n        </div>\n    )\n}\n\nexport default Register;","import React, { useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport ServerPath, { hostPath } from \"../ServerPath\";\nimport { useHistory } from 'react-router-dom';\nimport { UserContext } from '../context/userContext';\n\n\nfunction Auth() {\n\n    const history = useHistory();\n    const { updateUser } = useContext(UserContext);\n\n    useEffect(() => {\n        ServerPath();\n        onOpen();\n    }, []);\n\n    function onOpen() {\n        Axios.get(\"/auth\", {withCredentials: true })\n        .then(res => {\n            console.log(res);\n            const isAuth = res.data.auth;\n\n            if(isAuth) {\n                updateUser(\"name\", res.data.user.displayName);\n                history.push('/home');\n            } else {\n                history.push('/signin');\n            }\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return (\n        <div>\n        <h1>Auth</h1>\n        </div>\n    )\n}\n\nexport default Auth;","import React, { useState } from 'react';\n\nfunction TestArea() {\n\n    const[user, setUser] = useState({\n        name: '',\n        email:''\n    });\n\n    function handleClick() {\n        updateUser(\"name\", \"bill\");\n        console.log(user);\n    }\n\n     function updateUser(feild, value) {\n         setUser((prev) => {\n            return {\n                ...prev, \n                [feild]: value}\n        })\n\n        \n    }\n\n    return(\n        <div>\n        <h1>Test Area</h1>\n        <form action=\"/form\" method=\"POST\">\n            <input id=\"first\" name=\"name\"></input>\n            <button onClick={handleClick}>Go</button>\n        </form>\n        </div>\n    );\n}\n\nexport default TestArea;","import React, { createContext, useState } from 'react';\n\nexport const AdminContext = createContext();\n\nfunction AdminContextProvider(props) {\n\n    const [user, setUser] = useState({\n        name: '',\n        granted: ''\n    })\n\n    function updateUser(field, value) {\n        setUser((prevVal) => {\n            return {...prevVal, [field]: value}\n        })\n    }\n\n    return (\n        <AdminContext.Provider value={{user, updateUser}}>\n            {props.children}\n        </AdminContext.Provider>\n    );\n}\n\nexport default AdminContextProvider;","import React, { useEffect, useContext } from 'react';\nimport Axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { AdminContext} from '../../context/adminContext';\n\n\nfunction Auth() {\n\n    const history = useHistory();\n    const {updateUser } = useContext(AdminContext);\n\n    useEffect(() => {\n        onOpen()\n    }, []);\n\n    function onOpen() {\n\n        Axios.get(\"/administrator/auth\")\n        .then(res => {\n            const data = res.data;\n            if(data.auth) {\n                updateUser(\"granted\", data.access);\n                if(data.access == \"granted\") {\n                    history.push('/administrator/home');\n                } else {\n                    history.push('/administrator/signin');\n                }\n            } else {\n                history.push('/administrator/signin');\n            }\n        })  \n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    return(<h1>Auth</h1>)\n}\n\nexport default Auth;","import React, { useContext } from 'react';\nimport { AdminContext } from '../../context/adminContext';\n\nfunction SignIn() {\n\n    const { user } = useContext(AdminContext);\n\n    return (\n        <div>\n        <h1>Administrator Sign In</h1>\n        {user.granted == \"denied\" ? (\n            <div>\n            <h1>Access Denied</h1>\n            <a href=\"http://localhost:8080/administrator/logout\">Log Out</a>\n            </div>\n        ):(\n            <a href=\"http://localhost:8080/auth/github\">Sign In With GitHub</a>\n            )}\n        </div>\n    )\n}\n\nexport default SignIn;","import React from 'react';\n\nfunction Home() {\n    return (\n        <div>\n            <h1>Administrator Home</h1>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./pages/partials/app.css\"\n\nimport Home from \"./pages/home\";\nimport Products from \"./pages/items\";\nimport SignIn from \"./pages/signin\";\nimport Register from \"./pages/register\";\nimport Auth from './pages/auth';\nimport TestArea from './pages/testArea';\n\n//Administrator Items\nimport AdminAuth from \"./pages/administrator/auth\";\nimport AdminSignIn from \"./pages/administrator/signin\";\nimport AdminHome from \"./pages/administrator/home\";\n\n\nimport UserContextProvider from './context/userContext';\nimport AdminContextProvider from './context/adminContext';\n\nfunction App() {\n\n  return (\n    <UserContextProvider>\n    <Router>\n    <Switch>\n      <Route path=\"/\" exact component={Auth} />\n      <Route path=\"/Home\" exact component={Home} />\n      <Route path=\"/products\" component={Products} />\n      <Route path=\"/signin\" component={SignIn} />\n      <Route path=\"/register\" component={Register} />\n      <Route path=\"/test\" component={TestArea} />\n      <AdminContextProvider>\n      <Route path=\"/administrator\" exact component={AdminAuth} />\n      <Route path=\"/administrator/signin\" component={AdminSignIn} />\n      <Route path=\"/administrator/home\" component={AdminHome} />\n      </AdminContextProvider>\n      </Switch>\n    </Router>\n    </UserContextProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}